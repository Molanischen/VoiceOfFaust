//-----------------------------------------------
// Universal Pitch Tracker (a periods measurement)
//-----------------------------------------------

// experimental pitch tracker plus automatic switcher.
// it takes about as much cpu as just smoothing the incoming pitch.
// not smoothing it saves quite some cpu, but gives more glitchy sound.
SH(trig,x) = (*(1 - trig) + x * trig) ~_;


Pitch(a,x) = a * SR / max(M,1) - a * SR * (M == 0)
with  {
      U = (x' < 0) & (x >= 0) ;
      V = +(U) ~ %(int(a)) ;
      W = U & (V == a) ;
      N = (+(1) : *(1 - W)) ~_;
      M = SH(N == 0, N' + 1) ;
      };

//PTsmooth = 0.1*(((OSCfidelity*-1)+1):amp_follower(0.026))+0.997:min(0.9996):max(0.9984):vbargraph("[-1]PTsmooth", 0.997, 1);

PitchTracker(audio) = ((OSCpitchIsBad , OSCpitch, internal):select2) :smooth(PTsmooth)
//PitchTracker(audio) = OSCpitch : smooth(PTsmooth)
with	{
        internal = (audio:dcblockerat(MinInputPitch) : (lowpass(1) : Pitch(8.0): min(MaxInputPitch) )  ~ max(MinInputPitch*2)) : max(MinInputPitch);
        OSCpitchIsBad  = (isSameTooLong(OSCpitch,maxTimeWithoutPitch) & isSameTooLong(OSCfidelity,maxTimeWithoutFidelity));
        isSameTooLong(x,time) = (x@time)==x;
        same(x,time) =(x@time)==x;
        sames(x,time) = (prod(i,int(time),same(x,i+1)));
        intervalTester(x,nrSamples,interval) = (prod(i,nrSamples,same(x,i*interval+1)));
        };

