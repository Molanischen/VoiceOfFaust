
//-----------------------------------------------
// FM vocoder synthesis
//-----------------------------------------------
// maxNrInRoutings = 3;
// FMcenters(freq) = VocoderFreqsChooser(FMbottom,FMmid,FMband,FMtop,para):par(i, nrBands, _*freq):dezipBands;

FMindexes = VocoderFreqsChooser(FMindexBottom,FMindexMid,FMindexBand,FMindexTop,para):dezipBands;
// FMphases = VocoderLinArrayChooser(FMphaseBottom,FMphaseMid,FMphaseBand,FMphaseTop,para):dezipBands;

import("lib/myFMvox.dsp");

FMoscs=
    interleave(nrBands,5):
    par(i, nrBands, fuphoSlave);

// FMfunds(freq,index) = par(i, nrBands, FMfund(freq,index,phase(i)) ) with {
//   phase(i) = FMphases:selector(i,nrBands)*select2(polarity%2,1,-1);
// };

// FMvocoder(audio,freq,index,fidelity,doubleOscs)
FMvocoder(audio,freq,index,fidelity,0)=FMvocoderGroup(
  (FMvocoderGroup(funds(freq,index,0)), (freq<:bus(nrBands)),analizer(voice(audio,index),freq,fidelity,enableDeEsser),FMvocoderGroup(FMindexes),FMvocoderGroup(centers(freq)))
  :FMoscs:vocoderMixer(ambisonicsOn,outputRoutingEnabled,0)
  :postProc(nrOutChan,ambisonicsOn,enableAutosat,volume*0.025,width));


FMvocoder(audio,freq,index,fidelity,1)=
  par(i,nrOutChan,
    (FMvocoderGroup(funds(freq,index,i)), (freq<:bus(nrBands)),analizer(voice(audio,index),freq,fidelity,enableDeEsser),FMvocoderGroup(FMindexes),FMvocoderGroup(centers(freq))):FMoscs
  )
  :vocoderMixer(ambisonicsOn,outputRoutingEnabled,1)
  :postProc(nrOutChan,ambisonicsOn,enableAutosat,volume*0.01,1);

// FMvocoder(audio,freq,index,fidelity,1)= FMvocoderGroup(
//   par(i,nrOutChan,(funds(freq,index,i), (freq<:bus(nrBands)),analizer(voice(audio,index),freq,fidelity,enableDeEsser),FMindexes,centers(freq)):FMoscs  )
//   :FMvocoderMixer(ambisonicsOn,outputRoutingEnabled,doubleOscs)
//   :postProc(nrOutChan,ambisonicsOn,enableAutosat,volume*0.01,1));
